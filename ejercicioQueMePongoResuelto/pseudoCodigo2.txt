


class Empresa {
    Usuario usuario;

    list<prenda> generarConvinaciones(){        // NO SE COMO HACER PARA GENERAR UNA CONVINACION!!!!!!! FUCK
        this.filtrarSegunAptas().
    }
    Usuario cambiarUsuario(Usuario nuevoUsuario){
        this.usuario = nuevoUsuario;
    }
     list<prenda> filtrarSegunAptas() {         // No se como se hace un filter en Java
        return usuario.mostrarGuardarropas().filter(prenda -> prenda.verificarCondiciones());
    }
}

class Usuario {
    list<Prenda> guardarropas = [];
    Prenda prendaAuxiliar;

    Prenda agregarPrenda(Prenda prenda){
        this.guardarropas.add(prenda);
    }
    Prenda tirarPrenda(Prenda prenda){
        this.guardarropas.remove(prenda);
    }

    void especificar(string condicion, string valorDeCondicion, Prenda prenda){ // como el filter me devuelve una lista no me queda otra que usar un forEach
        this.agarrarPrendaDelGuardarropas(prenda).forEach(prenda -> prenda.cambiar(condicion, valorDeCondicion);
    }

    Prenda agarrarPrendaDelGuardarropas(Prenda prendaBuscada) {
        return guardarropas.filter(prenda -> prenda == prendaBuscada); // No c como hacer que no me devuelva una lista
    }

    list<Prenda> mostrarGuardarropas() = usuario.guardarropas;     // el usuario solo muestra sus prendas,
}                                                                  // no tiene la responsa. de verificar que se cumplan
                                                                    // las cond. de las prendas
class Prenda {
    TipoPrenda tipo;
    categoriaPrenda categoria;
    materialPrenda material;
    colorPrincPrenda colorPrincipal;
    colorSecPrenda colorSecundario;

    Prenda cambiar(string condicion, string nuevoValor){
        condicion = nuevoValor;
    }

    bool verificarCondiciones() {       //ESTO ESTA ASQUEROSOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
        if ((tipo == CAMISACORTA && categoria != PARTESUP) || (tipo == CAMISALARGA && categoria != PARTESUP)) {
            return false;
        }
        else {
            if (tipo == PANTALON && categoria != PARTEINF) {
                return false;
            }
            else {
                if (tipo == ZAPATO && categoria != CALZADO) {
                    retun false;
                }
                else {
                    if (tipo == COLLAR && categoria != ACCESORIO) {
                        return false;
                    }
                    else {
                            return true;
                         }
                    }
                }
            }
        }
    }
}

public enum TipoPrenda {
    ZAPATO,CAMISACORTA, CAMISALARGA, PANTALON, COLLAR
}
public enum categoriaPrenda {
    PARTESUP, PARTEINF, CALZADO, ACCESORIOS
}
public enum materialPrenda {
    LANA, SEDA, ALGODON
}
public enum colorPrincPrenda {
    ROJO, AZUL, AMARILLO, VERDE, VIOLETA, NARANJA, BLANCO, NEGRO, MARRON
}
public enum colorSecPrenda {
    ROJO, AZUL, AMARILLO, VERDE, VIOLETA, NARANJA, BLANCO, NEGRO, MARRON
}

